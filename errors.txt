src/parser.y:328.22-35: warning: type clash on default action: <t_parameter_type_list> != <t_parameter_list> [-Wother]
 parameter_type_list: parameter_list
                      ^^^^^^^^^^^^^^
src/parser.y:337.18-22: warning: type clash on default action: <t_identifier_list> != <identnode> [-Wother]
 identifier_list: Ident
                  ^^^^^
src/parser.y: warning: 1 nonterminal useless in grammar [-Wother]
src/parser.y: warning: 2 rules useless in grammar [-Wother]
src/parser.y:109.27-41: warning: nonterminal useless in grammar: identifier_list [-Wother]
 %type <t_identifier_list> identifier_list
                           ^^^^^^^^^^^^^^^
src/parser.y:337.18-22: warning: rule useless in grammar [-Wother]
 identifier_list: Ident
                  ^^^^^
src/parser.y:338.30-65: warning: rule useless in grammar [-Wother]
 			   | identifier_list Operator_comma Ident
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
src/parser.y: warning: 21 shift/reduce conflicts [-Wconflicts-sr]
In file included from src/parser.y:5:0:
Include/ast_allnodes.hpp: In constructor ‘StatementList::StatementList(StatementList*, Statement*)’:
Include/ast_allnodes.hpp:608:5: warning: ‘StatementList::RestOfStatements’ is initialized with itself [-Winit-self]
     StatementList(StatementList* OtherStatements, Statement* ThisStatement) : statement(ThisStatement), RestOfStatements(RestOfStatements){}
     ^
Include/ast_allnodes.hpp: At global scope:
Include/ast_allnodes.hpp:657:5: error: ‘specifiers’ does not name a type
     specifiers* specifier; // specifies type of declaration
     ^
Include/ast_allnodes.hpp: In constructor ‘declaration::declaration(declaration_specifiers*, init_declarator_list*)’:
Include/ast_allnodes.hpp:659:93: error: class ‘declaration’ does not have any field named ‘specifier’
     declaration(declaration_specifiers * _specifier ,init_declarator_list * _list = NULL) : specifier(_specifier), list(_list) {}
                                                                                             ^
src/parser.y: At global scope:
src/parser.y:28:25: error: expected unqualified-id before ‘constexpr’
     ConstantExpression* constexpr;
                         ^
src/parser.y:28:23: error: expected ‘;’ at end of member declaration
     ConstantExpression* constexpr;
                       ^
src/parser.y:28:25: error: declaration does not declare anything [-fpermissive]
     ConstantExpression* constexpr;
                         ^
src/parser.y:35:5: error: ‘storage_class_specifier’ does not name a type
     storage_class_specifier * t_storage_class_specifier;
     ^
src/parser.y:43:5: error: ‘parameter_type_list’ does not name a type
     parameter_type_list  *  t_parameter_type_list;
     ^
src/parser.y:46:5: error: ‘identifier_list’ does not name a type
     identifier_list       * t_identifier_list;
     ^
src/parser.y: In function ‘int yyparse()’:
src/parser.y:320:109: error: expected unqualified-id before ‘constexpr’
      | direct_declarator Punctuator_squ_open constant_EXPR Punctuator_squ_close  { $$ = new direct_declarator(NULL, $1, $3); }
                                                                                                             ^
src/parser.y:320:109: error: expected ‘)’ before ‘constexpr’
src/parser.y:321:115: error: ‘YYSTYPE {aka union YYSTYPE}’ has no member named ‘t_parameter_type_list’
      | direct_declarator Punctuator_par_open parameter_type_list  Punctuator_par_close  { $$ = new direct_declarator(NULL, $1, NULL, $3); }
                                                                                                                   ^
src/parser.y:331:117: error: no matching function for call to ‘parameter_list::parameter_list(parameter_list*&, parameter_declaration*&)’
In file included from src/parser.y:5:0:
Include/ast_allnodes.hpp:837:5: note: candidate: parameter_list::parameter_list()
     parameter_list():para_list(NULL), para_dec(NULL), abs_dec(NULL){}
     ^
Include/ast_allnodes.hpp:837:5: note:   candidate expects 0 arguments, 2 provided
Include/ast_allnodes.hpp:836:5: note: candidate: parameter_list::parameter_list(parameter_declaration*, parameter_list*, abstract_declarator*)
     parameter_list(parameter_declaration * _para_dec, parameter_list * _para_list = NULL, abstract_declarator * _abs_dec = NULL) : para_list(_para_list), para_dec(_para_dec), abs_dec(_abs_dec) {}
     ^
Include/ast_allnodes.hpp:836:5: note:   no known conversion for argument 1 from ‘parameter_list*’ to ‘parameter_declaration*’
Include/ast_allnodes.hpp:830:7: note: candidate: constexpr parameter_list::parameter_list(const parameter_list&)
 class parameter_list : public Node
       ^
Include/ast_allnodes.hpp:830:7: note:   candidate expects 1 argument, 2 provided
Include/ast_allnodes.hpp:830:7: note: candidate: constexpr parameter_list::parameter_list(parameter_list&&)
Include/ast_allnodes.hpp:830:7: note:   candidate expects 1 argument, 2 provided
src/parser.y:335:143: error: no matching function for call to ‘parameter_declaration::parameter_declaration(declaration_specifiers*&, NULL, abstract_declarator*&)’
In file included from src/parser.y:5:0:
Include/ast_allnodes.hpp:850:5: note: candidate: parameter_declaration::parameter_declaration(declaration_specifiers*, declarator*)
     parameter_declaration(declaration_specifiers * _dec_spec, declarator * _dec = NULL) : dec_spec(_dec_spec), dec(_dec) {}
     ^
Include/ast_allnodes.hpp:850:5: note:   candidate expects 2 arguments, 3 provided
Include/ast_allnodes.hpp:845:7: note: candidate: constexpr parameter_declaration::parameter_declaration(const parameter_declaration&)
 class parameter_declaration : public Node
       ^
Include/ast_allnodes.hpp:845:7: note:   candidate expects 1 argument, 3 provided
Include/ast_allnodes.hpp:845:7: note: candidate: constexpr parameter_declaration::parameter_declaration(parameter_declaration&&)
Include/ast_allnodes.hpp:845:7: note:   candidate expects 1 argument, 3 provided
src/parser.y:348:136: error: expected unqualified-id before ‘constexpr’
         | direct_abstract_declarator Punctuator_squ_open constant_EXPR Punctuator_squ_close { $$ = new direct_abstract_declarator($1, NULL, $3); }
                                                                                                                                        ^
src/parser.y:348:136: error: expected ‘)’ before ‘constexpr’
src/parser.y:349:100: error: expected unqualified-id before ‘constexpr’
         | Punctuator_squ_open constant_EXPR Punctuator_squ_close { $$ = new direct_abstract_declarator(NULL, NULL, $2); }
                                                                                                    ^
src/parser.y:349:100: error: expected ‘)’ before ‘constexpr’
src/parser.y:352:142: error: ‘YYSTYPE {aka union YYSTYPE}’ has no member named ‘t_parameter_type_list’
         | direct_abstract_declarator Punctuator_par_open parameter_type_list Punctuator_par_close { $$ = new direct_abstract_declarator($1, NULL, NULL, $3); }
                                                                                                                                              ^
src/parser.y:353:106: error: ‘YYSTYPE {aka union YYSTYPE}’ has no member named ‘t_parameter_type_list’
         | Punctuator_par_open parameter_type_list Punctuator_par_close { $$ = new direct_abstract_declarator(NULL, NULL, NULL, $2); }
                                                                                                          ^
src/parser.y:386:51: error: expected unqualified-id before ‘constexpr’
 labeled_statement: Keyword_case constant_EXPR Operator_trinary_choice statement { $$ = new CaseOrDefault($2, $4); }
                                                   ^
src/parser.y:386:51: error: expected ‘)’ before ‘constexpr’
src/parser.y:386:78: error: no matching function for call to ‘CaseOrDefault::CaseOrDefault()’
 labeled_statement: Keyword_case constant_EXPR Operator_trinary_choice statement { $$ = new CaseOrDefault($2, $4); }
                                                                              ^
In file included from src/parser.y:5:0:
Include/ast_allnodes.hpp:632:5: note: candidate: CaseOrDefault::CaseOrDefault(Statement*)
     CaseOrDefault(Statement* _body) : Eval(NULL), Body(_body){}
     ^
Include/ast_allnodes.hpp:632:5: note:   candidate expects 1 argument, 0 provided
Include/ast_allnodes.hpp:631:5: note: candidate: CaseOrDefault::CaseOrDefault(Expression*, Statement*)
     CaseOrDefault(Expression* _eval, Statement* _body) : Eval(_eval), Body(_body){}
     ^
Include/ast_allnodes.hpp:631:5: note:   candidate expects 2 arguments, 0 provided
Include/ast_allnodes.hpp:629:7: note: candidate: constexpr CaseOrDefault::CaseOrDefault(const CaseOrDefault&)
 class CaseOrDefault : public Statement{
       ^
Include/ast_allnodes.hpp:629:7: note:   candidate expects 1 argument, 0 provided
Include/ast_allnodes.hpp:629:7: note: candidate: constexpr CaseOrDefault::CaseOrDefault(CaseOrDefault&&)
Include/ast_allnodes.hpp:629:7: note:   candidate expects 1 argument, 0 provided
src/parser.y:401:24: error: cannot convert ‘EmptyStatement*’ to ‘ExpressionStatement*’ in assignment
                     | Punctuator_eol { $$ = new EmptyStatement(); }
                        ^
src/parser.y: At global scope:
src/parser.y:463:6: warning: ISO C++ forbids declaration of ‘main’ with no type [-Wreturn-type]
 main()
      ^
make: *** [src/parser.tab.o] Error 1
